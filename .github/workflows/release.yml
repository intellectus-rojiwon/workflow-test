name: Release 🔖

on:
  push:

permissions:
  id-token: write
  contents: read

jobs:
  continus_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@main

      - name: Configure AWS credentials 🔑
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      # - name: Build & Push Docker Image 🐳
      #   id: image
      #   uses: deploy-actions/build-push-ecr@main
      #   with:
      #     Name: workflow-test
      #     IfNotExist: latest
      #     TagMutability: IMMUTABLE
      #     Tags: 1.0.3

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup ECR Repository
        uses: deploy-actions/setup-ecr@main
        with:
          RepositoryName: workflow-test
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Build
        uses: docker/build-push-action@v6
        with: 
          load: true
          tags: |
            ${{ steps.ecr.outputs.registry }}/workflow-test:latest
            ${{ steps.ecr.outputs.registry }}/workflow-test:1.0.4

      # tag가 여러개라면 각각 push해야 합니다.
      # lambda deploy를 위해 digest를 얻습니다.
      - name: Docker Push
        id: digest
        run: |
          docker push ${{ steps.ecr.outputs.registry }}/workflow-test:latest
          docker push ${{ steps.ecr.outputs.registry }}/workflow-test:1.0.4
          echo "image=$(docker inspect --format '{{index .RepoDigests 0}}' ${{ steps.image.outputs.uri }})" >> "$GITHUB_OUTPUT"

      - name: Deploy Lambda
        uses: deploy-actions/lambda-api@main
        with:
          Name: workflow-test
          ImageUri: ${{ steps.ecr.outputs.registry }}/workflow-test@${{ steps.digest.outputs.image }}
