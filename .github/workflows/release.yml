name: Release 🔖

on:
  push:
  workflow_dispatch:
    inputs:
      test:
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read

jobs:
  # ci:
  #   uses: IntellectusCorp/reusable-workflow/.github/workflows/build-push-ecr.yml@main
  #   with:
  #     RepositoryName: workflow-test
  #     AssumeRoleArn: ${{ vars.AWS_ASSUME_ROLE_ARN }}
  #     AwsRegion: ${{ vars.AWS_REGION }}
  #     CacheFrom: type=gha, ref=main
  #     CacheTo: type=gha, ref=main, mode=max
  test:
    if: ${{ inputs.test }}
    runs-on: ubuntu-latest
    steps:
      - name: Check
        run: echo "hi"

  cd:
    runs-on: ubuntu-latest
    # needs: ci

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@main

      - name: Configure AWS credentials 🔑
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup ECR Repository
        uses: deploy-actions/setup-ecr@main
        with:
          RepositoryName: workflow-test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Build Builder Stage
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          target: builder
          cache-from: type=gha, ref=main
          cache-to: type=gha, ref=main, mode=max

      - name: Docker Build Runner Stage
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ${{ steps.ecr.outputs.registry }}/workflow-test:latest
          cache-from: type=gha, ref=main

      - name: Docker Push
        id: digest
        run: |
          docker push ${{ steps.ecr.outputs.registry }}/workflow-test:latest
          echo "image=$(docker inspect --format '{{index .RepoDigests 0}}' ${{ steps.ecr.outputs.registry }}/workflow-test:latest)" >> "$GITHUB_OUTPUT"

      - name: Deploy Lambda
        uses: deploy-actions/lambda-api@main
        with:
          Name: workflow-test
          ImageUri: ${{ steps.digest.outputs.image }}
